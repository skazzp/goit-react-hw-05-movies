{"version":3,"file":"static/js/387.a1039a7f.chunk.js","mappings":"6MAEaA,EAAOC,EAAAA,GAAAA,GAAH,iIAQJC,EAAOD,EAAAA,GAAAA,GAAH,8GAMJE,EAAQF,EAAAA,GAAAA,IAAH,wFAMLG,EAAQH,EAAAA,GAAAA,GAAH,mFAKLI,EAAOJ,EAAAA,GAAAA,EAAH,+E,SCgBjB,EAtCa,WACX,OAAwBK,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OAXAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,IAEXI,EAAAA,EAAAA,IAAQH,GACLI,MAAK,SAAAC,GAAQ,OAAIR,GAAQ,kBAAMQ,EAASC,KAAKV,IAApB,GAAZ,IACbW,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,IACTG,QAAQZ,GAAa,GAG3B,GAAE,CAACC,EAASF,KAGX,SAACT,EAAD,UACGO,GACCA,EAAKgB,KAAI,SAAAC,GACP,IAAQC,EAAsCD,EAAtCC,GAAIC,EAAkCF,EAAlCE,KAAMC,EAA4BH,EAA5BG,aAAcC,EAAcJ,EAAdI,UAChC,OACE,UAAC1B,EAAD,YACE,SAACC,EAAD,CACE0B,IAAK,kCAAoCF,EACzCG,IAAKJ,KAEP,SAACtB,EAAD,qBACA,SAACC,EAAD,UAAOqB,KACP,SAACtB,EAAD,0BACA,SAACC,EAAD,UAAOuB,MAREH,EAWd,KAGR,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 25px;\n  margin: 0;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 25px;\n`;\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 200px;\n`;\nexport const Photo = styled.img`\n  display: block;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n`;\nexport const Title = styled.h3`\n  margin: 0%;\n  font-size: 16px;\n  line-height: 1.5rem;\n`;\nexport const Text = styled.p`\n  margin: 0;\n  font-size: 16px;\n  line-height: 1.3;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'services/MovieAPI';\nimport { List, Item, Photo, Title, Text } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n  useEffect(() => {\n    setIsLoading(true);\n    const getData = () => {\n      getCast(movieId)\n        .then(response => setCast(() => response.data.cast))\n        .catch(err => console.log(err))\n        .finally(setIsLoading(false));\n    };\n    getData();\n  }, [movieId, isLoading]);\n\n  return (\n    <List>\n      {cast &&\n        cast.map(elem => {\n          const { id, name, profile_path, character } = elem;\n          return (\n            <Item key={id}>\n              <Photo\n                src={'https://image.tmdb.org/t/p/w500' + profile_path}\n                alt={name}\n              />\n              <Title>Name:</Title>\n              <Text>{name}</Text>\n              <Title>Character:</Title>\n              <Text>{character}</Text>\n            </Item>\n          );\n        })}\n    </List>\n  );\n};\n\nexport default Cast;\n"],"names":["List","styled","Item","Photo","Title","Text","useState","cast","setCast","isLoading","setIsLoading","movieId","useParams","useEffect","getCast","then","response","data","catch","err","console","log","finally","map","elem","id","name","profile_path","character","src","alt"],"sourceRoot":""}